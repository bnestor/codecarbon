permissions:
  contents: read
name: test-package

on:
  pull_request:
    paths:
      - "codecarbon/**"
      - "pyproject.toml"
      - "uv.lock"

jobs:
  python-test:
    runs-on: ubuntu-24.04
    strategy:
        matrix:
          python-version: ["3.9", "3.12", "3.13"]
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Install uv
      uses: astral-sh/setup-uv@caf0cab7a618c569241d31dcd442f54681755d39 # v3.2.4
      with:
        version: "latest"
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    - name: Install dependencies
      run: uv sync --python ${{ matrix.python-version }}
    - name: Test package
      run: uv run --python ${{ matrix.python-version }} task test-package

    build-package:
      runs-on: ubuntu-latest
      needs: [python-test]
      steps:
        - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        - name: Install uv
          uses: astral-sh/setup-uv@caf0cab7a618c569241d31dcd442f54681755d39 # v3.2.4
          with:
            version: "latest"
        - name: Set up Python
          run: uv python install 3.12
        - name: Check versions
          run: |
              uv run python .github/check_version.py -o
        - name: Build pip package
          run: |
              uv build
        - name: Archive Pypi artifacts
          uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
          with:
              name: pypi_dist
              path: dist

    test-package-from-wheel:
        runs-on: ubuntu-24.04
        needs: [build-package]
        strategy:
            matrix:
              python-version: ["3.9", "3.12", "3.13"]
        steps:
        - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
          with:
            sparse-checkout: |
              tests/*.py
              pytest.ini
              pyproject.toml
            sparse-checkout-cone-mode: false
        - name: Install uv
          uses: astral-sh/setup-uv@caf0cab7a618c569241d31dcd442f54681755d39 # v3.2.4
          with:
            version: "latest"
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
          with:
            python-version: ${{ matrix.python-version }}
        - name: Download built package
          uses: actions/download-artifact@14f6ce0f7596b13e0bf80a2aa8e8b9f8f6c72e3e # v4.1.8
          with:
            name: pypi_dist
            path: dist
        - name: Create clean virtual environment
          run: |
            uv venv test-env --python ${{ matrix.python-version }}
            echo "VIRTUAL_ENV=$PWD/test-env" >> $GITHUB_ENV
            echo "$PWD/test-env/bin" >> $GITHUB_PATH
        - name: Install package from wheel (without source)
          run: |
            # Install the wheel and test dependencies without the source code
            uv pip install dist/*.whl
            uv pip install pytest pytest-mock requests-mock responses pandas
        - name: Test package integrity
          run: |
            # Run the package integrity tests to verify all data files are included
            uv run python -m pytest tests/test_package_integrity.py -v
            uv run task test-package
        - name: Test CLI functionality
          run: |
            # Test that the CLI is functional
            codecarbon --help
            python -c "from codecarbon import EmissionsTracker; print('âœ“ Package import successful')"
